{"ast":null,"code":"import { ElMessage } from 'element-plus';\nexport default {\n  name: \"MsgView\",\n  data() {\n    return {\n      activeTab: 'buyer',\n      buyerMessages: [],\n      sellerMessages: []\n    };\n  },\n  methods: {\n    removeBuyerMessage(index) {\n      this.$http.post(\"/api/rmMsg\", {\n        msg_id: this.buyerMessages[index].msg_id\n      }).catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.buyerMessages.splice(index, 1);\n    },\n    removeSellerMessage(index) {\n      this.$http.post(\"/api/rmMsg\", {\n        msg_id: this.sellerMessages[index].msg_id\n      }).catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.sellerMessages.splice(index, 1);\n    },\n    clearAllMessages() {\n      this.$http.post(\"/api/rmUserMsg\", {\n        user_id: this.$store.getters.status.userid\n      }).catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.buyerMessages = [];\n      this.sellerMessages = [];\n    }\n  },\n  mounted() {\n    this.$http.post('/api/getMsgs', {\n      user_id: this.$store.getters.status.userid\n    }).then(response => {\n      this.buyerMessages = response.data.buyerMsgs;\n      this.sellerMessages = response.data.sellerMsgs;\n    }).catch(error => {\n      ElMessage({\n        message: error,\n        type: \"error\"\n      });\n    });\n    /*         axios.get('/api/getBuyerMsgs').then(res => {\r\n                this.buyerMessages = res.data.list\r\n            }).catch(console.log(\"JI\"))\r\n            axios.get('/api/getSellerMsgs').then(res => {\r\n                this.sellerMessages = res.data.list\r\n            }).catch(console.log(\"JI\"))  */\n  }\n};","map":{"version":3,"names":["ElMessage","name","data","activeTab","buyerMessages","sellerMessages","methods","removeBuyerMessage","index","$http","post","msg_id","catch","error","message","type","splice","removeSellerMessage","clearAllMessages","user_id","$store","getters","status","userid","mounted","then","response","buyerMsgs","sellerMsgs"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\Message.vue"],"sourcesContent":["<template>\r\n    <el-container style=\"height: 100vh;\">\r\n        <el-header style=\"border-bottom: 1px solid lightgray; height: 100vh;\">\r\n            <el-tabs v-model=\"activeTab\" >\r\n                <el-tab-pane label=\"查看买家消息\" name=\"buyer\">\r\n                    <div v-if=\"this.buyerMessages.length === 0\"\r\n                        style=\"display:flex;align-items: center;justify-content: center;\">\r\n                        <h3 style=\" color: rgb(126, 126, 126);font-size: 22px;\">还没有收到消息哦</h3>\r\n                    </div>\r\n                    <transition-group name=\"list\" tag=\"div\">\r\n                        <div v-for=\"(item, index) in  buyerMessages \" :key=\"item.id\" class=\"list-item\">\r\n                            <el-card>\r\n                                <el-row :gutter=\"10\">\r\n                                    <el-col :span=\"22\">\r\n                                        <el-descriptions :column=\"3\" border=true size=\"large\">\r\n                                            <el-descriptions-item label=\"买家昵称\">{{ item.buyerName }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"电话号码\">{{ item.phoneNum }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"发送时间\">{{ item.year }}-{{ item.month }}-{{ item.day\r\n                                            }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"消息内容\">{{ item.content }}</el-descriptions-item>\r\n                                        </el-descriptions>\r\n                                    </el-col>\r\n                                    <el-col :span=\"2\" style=\"display: flex; align-items: center;\">\r\n                                        <el-button type=\"danger\" round class=“button” size=“large” style=\"align-items:end\"\r\n                                            @click=\"removeBuyerMessage(index)\">删除消息</el-button>\r\n                                    </el-col>\r\n                                </el-row>\r\n                            </el-card>\r\n                            <el-divider></el-divider>\r\n                        </div>\r\n                    </transition-group>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"查看卖家消息\" name=\"seller\">\r\n                    <div v-if=\"this.sellerMessages.length === 0\"\r\n                        style=\"display:flex;align-items: center;justify-content: center;\">\r\n                        <h3 style=\" color: rgb(126, 126, 126);font-size: 22px;\">还没有收到消息哦</h3>\r\n                    </div>\r\n                    <el-header v-if=\"this.sellerMessages.length >= 0\" style=\"display:flex;align-items: center;justify-content: center; padding-top: 20px;\">\r\n            <el-button type=\"danger\" @click=\"clearAllMessages\">清除所有消息</el-button> </el-header>\r\n                    <transition-group name=\"list\" tag=\"div\">\r\n                        <div v-for=\"( item, index ) in  sellerMessages \" :key=\"item.id\" class=\"list-item\">\r\n                            <el-card>\r\n                                <el-row :gutter=\"10\">\r\n                                    <el-col :span=\"22\">\r\n                                        <el-descriptions :column=\"3\" border=true size=\"large\">\r\n                                            <el-descriptions-item label=\"卖家昵称\">{{ item.sellerName }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"电话号码\">{{ item.phoneNum }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"发送时间\">{{ item.year }}-{{ item.month }}-{{ item.day\r\n                                            }}</el-descriptions-item>\r\n                                            <el-descriptions-item label=\"消息内容\">{{ item.content }}</el-descriptions-item>\r\n                                        </el-descriptions>\r\n                                    </el-col>\r\n                                    <el-col :span=\"2\" style=\"display: flex; align-items: center;\">\r\n                                        <el-button type=\"danger\" round class=“button” size=“large” style=\"align-items:end\"\r\n                                            @click=\"removeSellerMessage(index)\">删除消息</el-button>\r\n                                    </el-col>\r\n                                </el-row>\r\n                            </el-card>\r\n                            <el-divider></el-divider>\r\n                        </div>\r\n                    </transition-group>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </el-header>\r\n    </el-container>\r\n</template>\r\n  \r\n<script>\r\nimport { ElMessage } from 'element-plus'\r\nexport default {\r\n    name: \"MsgView\",\r\n    data() {\r\n        return {\r\n            activeTab: 'buyer',\r\n            buyerMessages: [],\r\n            sellerMessages: []\r\n        }\r\n    },\r\n    methods: {\r\n        removeBuyerMessage(index) {\r\n            this.$http.post(\"/api/rmMsg\",{\r\n                msg_id:this.buyerMessages[index].msg_id\r\n            }).catch(error=>{\r\n                ElMessage({ message: error, type: \"error\" })\r\n            })\r\n            this.buyerMessages.splice(index, 1);\r\n        },\r\n        removeSellerMessage(index) {\r\n            this.$http.post(\"/api/rmMsg\",{\r\n                msg_id:this.sellerMessages[index].msg_id\r\n            }).catch(error=>{\r\n                ElMessage({ message: error, type: \"error\" })\r\n            })\r\n            this.sellerMessages.splice(index, 1);\r\n        },\r\n        clearAllMessages() {\r\n            this.$http.post(\"/api/rmUserMsg\",{\r\n                user_id: this.$store.getters.status.userid,\r\n            }).catch(error=>{\r\n                ElMessage({ message: error, type: \"error\" })\r\n            })\r\n            this.buyerMessages = [];\r\n            this.sellerMessages = [];\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$http.post('/api/getMsgs', {\r\n            user_id: this.$store.getters.status.userid\r\n        }).then(response => {\r\n            this.buyerMessages = response.data.buyerMsgs;\r\n            this.sellerMessages = response.data.sellerMsgs;\r\n        }).catch(error => {\r\n            ElMessage({ message: error, type: \"error\" })\r\n        })\r\n        /*         axios.get('/api/getBuyerMsgs').then(res => {\r\n                    this.buyerMessages = res.data.list\r\n                }).catch(console.log(\"JI\"))\r\n                axios.get('/api/getSellerMsgs').then(res => {\r\n                    this.sellerMessages = res.data.list\r\n                }).catch(console.log(\"JI\"))  */\r\n    }\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.text.item {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.el-header {\r\n    height: auto;\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100px;\r\n    border-radius: 100px;\r\n}\r\n\r\n.image {\r\n    margin-left: 20px;\r\n    /* 距离左边的距离 */\r\n    margin-right: 50px;\r\n}\r\n\r\n.list-item {\r\n    transition: all 0.5s ease;\r\n}\r\n\r\n\r\n.list-leave-active {\r\n    position: absolute;\r\n}\r\n\r\n.list-leave-to {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n}\r\n\r\n.button {\r\n    margin-left: 50px;\r\n    margin-right: 20px;\r\n}\r\n</style>"],"mappings":"AAoEA,SAASA,SAAQ,QAAS,cAAa;AACvC,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,OAAO;MAClBC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE;IACpB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,kBAAkBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,YAAY,EAAC;QACzBC,MAAM,EAAC,IAAI,CAACP,aAAa,CAACI,KAAK,CAAC,CAACG;MACrC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAE;QACZb,SAAS,CAAC;UAAEc,OAAO,EAAED,KAAK;UAAEE,IAAI,EAAE;QAAQ,CAAC;MAC/C,CAAC;MACD,IAAI,CAACX,aAAa,CAACY,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;IACvC,CAAC;IACDS,mBAAmBA,CAACT,KAAK,EAAE;MACvB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,YAAY,EAAC;QACzBC,MAAM,EAAC,IAAI,CAACN,cAAc,CAACG,KAAK,CAAC,CAACG;MACtC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAE;QACZb,SAAS,CAAC;UAAEc,OAAO,EAAED,KAAK;UAAEE,IAAI,EAAE;QAAQ,CAAC;MAC/C,CAAC;MACD,IAAI,CAACV,cAAc,CAACW,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;IACDU,gBAAgBA,CAAA,EAAG;MACf,IAAI,CAACT,KAAK,CAACC,IAAI,CAAC,gBAAgB,EAAC;QAC7BS,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC;MACxC,CAAC,CAAC,CAACX,KAAK,CAACC,KAAK,IAAE;QACZb,SAAS,CAAC;UAAEc,OAAO,EAAED,KAAK;UAAEE,IAAI,EAAE;QAAQ,CAAC;MAC/C,CAAC;MACD,IAAI,CAACX,aAAY,GAAI,EAAE;MACvB,IAAI,CAACC,cAAa,GAAI,EAAE;IAC5B;EACJ,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACf,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;MAC5BS,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC;IACxC,CAAC,CAAC,CAACE,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACtB,aAAY,GAAIsB,QAAQ,CAACxB,IAAI,CAACyB,SAAS;MAC5C,IAAI,CAACtB,cAAa,GAAIqB,QAAQ,CAACxB,IAAI,CAAC0B,UAAU;IAClD,CAAC,CAAC,CAAChB,KAAK,CAACC,KAAI,IAAK;MACdb,SAAS,CAAC;QAAEc,OAAO,EAAED,KAAK;QAAEE,IAAI,EAAE;MAAQ,CAAC;IAC/C,CAAC;IACD;;;;;;EAMJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}