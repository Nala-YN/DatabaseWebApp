{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, TransitionGroup as _TransitionGroup, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3456159b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createBlock(_component_el_container, {\n    direction: \"vertical\"\n  }, {\n    default: _withCtx(() => [_createVNode(_TransitionGroup, {\n      name: \"list\",\n      tag: \"div\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"list-item\"\n        }, [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_image, {\n            src: item.image,\n            class: \"image\"\n          }, null, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"div\", null, _toDisplayString(item.description), 1 /* TEXT */), _createVNode(_component_el_button, {\n            type: \"primary\",\n            round: \"\",\n            class: \"button\",\n            size: \"large\",\n            onClick: $event => $options.removeItem(index)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"取消购买\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_divider)]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_container","direction","_createVNode","_TransitionGroup","name","tag","_createElementBlock","_Fragment","_renderList","$data","items","item","index","key","id","_component_el_card","_createElementVNode","_hoisted_1","_component_el_image","src","image","_toDisplayString","description","_component_el_button","type","round","size","onClick","$event","$options","removeItem","_component_el_divider"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\Bought.vue"],"sourcesContent":["<template>\r\n  <el-container direction=\"vertical\">\r\n    <transition-group name=\"list\" tag=\"div\">\r\n      <div v-for=\"(item, index) in items\" :key=\"item.id\" class=\"list-item\">\r\n        <el-card>\r\n          <div class=\"card\">\r\n            <el-image :src=\"item.image\" class=\"image\"></el-image>\r\n            <div>{{ item.description }}</div>\r\n            <el-button type=\"primary\" round class=\"button\" size=\"large\" @click=\"removeItem(index)\">取消购买</el-button>\r\n          </div>\r\n        </el-card>\r\n        <el-divider></el-divider>\r\n      </div>\r\n    </transition-group>\r\n  </el-container>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport Mock from 'mockjs';\r\nMock.mock('/api/data', {\r\n  'list|10-20': [{\r\n    'id|+1': 1,\r\n    'title': '@ctitle(10, 20)',\r\n    'image': '@image(\\'200x100\\', \\'#50B347\\', \\'Hello\\')',\r\n    'datetime': '@datetime()',\r\n    'author': '@cname()',\r\n    \r\n    'description': '@ctitle(30, 100)'\r\n  }]\r\n})\r\nexport default {\r\n  name: \"cartView\",\r\n\r\n  data() {\r\n    return {\r\n      items: [],\r\n    }\r\n  },\r\n  methods: {\r\n    removeItem(index) {\r\n      this.items.splice(index, 1);\r\n    }\r\n  },\r\n  mounted() {\r\n    axios.get('/api/data').then(res => {\r\n      this.items = res.data.list\r\n    }).catch(console.log(\"JI\"))\r\n    console.log('get')\r\n    console.log(this.items)\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.text.item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 200px;\r\n  border-radius: 100px;\r\n}\r\n\r\n.image {\r\n  margin-left: 20px;\r\n  /* 距离左边的距离 */\r\n  margin-right: 50px;\r\n}\r\n.list-item {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-leave-active {\r\n  position: absolute;\r\n}\r\n\r\n.list-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n.button {\r\n  margin-left: 50px;\r\n  margin-right: 20px;\r\n}</style> "],"mappings":";;;EAKeA,KAAK,EAAC;AAAM;;;;;;;uBAJzBC,YAAA,CAaeC,uBAAA;IAbDC,SAAS,EAAC;EAAU;sBAChC,MAWmB,CAXnBC,YAAA,CAWmBC,gBAAA;MAXDC,IAAI,EAAC,MAAM;MAACC,GAAG,EAAC;;wBAC3B,MAA8B,E,kBAAnCC,mBAAA,CASMC,SAAA,QAAAC,WAAA,CATuBC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;6BAAxBN,mBAAA,CASM;UAT+BO,GAAG,EAAEF,IAAI,CAACG,EAAE;UAAEhB,KAAK,EAAC;YACvDI,YAAA,CAMUa,kBAAA;4BALR,MAIM,CAJNC,mBAAA,CAIM,OAJNC,UAIM,GAHJf,YAAA,CAAqDgB,mBAAA;YAA1CC,GAAG,EAAER,IAAI,CAACS,KAAK;YAAEtB,KAAK,EAAC;4CAClCkB,mBAAA,CAAiC,aAAAK,gBAAA,CAAzBV,IAAI,CAACW,WAAW,kBACxBpB,YAAA,CAAuGqB,oBAAA;YAA5FC,IAAI,EAAC,SAAS;YAACC,KAAK,EAAL,EAAK;YAAC3B,KAAK,EAAC,QAAQ;YAAC4B,IAAI,EAAC,OAAO;YAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAAClB,KAAK;;8BAAG,MAAI,C,iBAAJ,MAAI,E;;;;sCAG/FV,YAAA,CAAyB6B,qBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}