{"ast":null,"code":"export default {\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '�������û���',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '����������',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '���볤�Ȳ�������6���ַ�',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '���ٴ���������',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value === this.registerForm.password) {\n              callback();\n            } else {\n              callback(new Error('������������벻һ��'));\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          // ִ��ע���߼����������˷���ע������\n          // ��ע��ɹ��󣬿��Խ���ҳ����ת����������\n          // ʾ���������̨��ӡע����Ϣ\n          console.log('ע����Ϣ:', this.registerForm);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","registerForm","username","password","confirmPassword","rules","required","message","trigger","min","validator","rule","value","callback","Error","methods","submitForm","$refs","validate","valid","console","log"],"sources":["E:\\Uni_homework\\DB\\test\\DatabaseWebApp\\client\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-form\">\r\n      <el-form\r\n        :model=\"registerForm\"\r\n        :rules=\"rules\"\r\n        ref=\"registerForm\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"�û���\" prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\"></el-input>\r\n        </el-form-item>\r\n  \r\n        <el-form-item label=\"����\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n        </el-form-item>\r\n  \r\n        <el-form-item label=\"ȷ������\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"registerForm.confirmPassword\"></el-input>\r\n        </el-form-item>\r\n  \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\">ע��</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        registerForm: {\r\n          username: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '�������û���', trigger: 'blur' },\r\n          ],\r\n          password: [\r\n            { required: true, message: '����������', trigger: 'blur' },\r\n            { min: 6, message: '���볤�Ȳ�������6���ַ�', trigger: 'blur' },\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: '���ٴ���������', trigger: 'blur' },\r\n            {\r\n              validator: (rule, value, callback) => {\r\n                if (value === this.registerForm.password) {\r\n                  callback();\r\n                } else {\r\n                  callback(new Error('������������벻һ��'));\r\n                }\r\n              },\r\n              trigger: 'blur',\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      submitForm() {\r\n        this.$refs.registerForm.validate(valid => {\r\n          if (valid) {\r\n            // ִ��ע���߼����������˷���ע������\r\n            // ��ע��ɹ��󣬿��Խ���ҳ����ת����������\r\n            // ʾ���������̨��ӡע����Ϣ\r\n            console.log('ע����Ϣ:', this.registerForm);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .register-form {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA4BE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACnB,CAAC;MACDC,KAAK,EAAE;QACLH,QAAQ,EAAE,CACR;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,aAAa;UAAEC,OAAO,EAAE;QAAO,CAAC,CAC5D;QACDL,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,YAAY;UAAEC,OAAO,EAAE;QAAO,CAAC,EAC1D;UAAEC,GAAG,EAAE,CAAC;UAAEF,OAAO,EAAE,qBAAqB;UAAEC,OAAO,EAAE;QAAO,CAAC,CAC5D;QACDJ,eAAe,EAAE,CACf;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,eAAe;UAAEC,OAAO,EAAE;QAAO,CAAC,EAC7D;UACEE,SAAS,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;YACpC,IAAID,KAAI,KAAM,IAAI,CAACX,YAAY,CAACE,QAAQ,EAAE;cACxCU,QAAQ,CAAC,CAAC;YACZ,OAAO;cACLA,QAAQ,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACzC;UACF,CAAC;UACDN,OAAO,EAAE;QACX,CAAC;MAEL;IACF,CAAC;EACH,CAAC;EACDO,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAChB,YAAY,CAACiB,QAAQ,CAACC,KAAI,IAAK;QACxC,IAAIA,KAAK,EAAE;UACT;UACA;UACA;UACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACpB,YAAY,CAAC;QAC3C;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}