{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0335f4d0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"align-items\": \"flex-end\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"align-items\": \"flex-end\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_footer = _resolveComponent(\"el-footer\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  return _openBlock(), _createBlock(_component_el_tabs, {\n    modelValue: $data.activeTab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.activeTab = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"所有帖子\",\n      name: \"all\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, item => {\n        return _openBlock(), _createBlock(_component_el_card, {\n          key: item.id,\n          class: \"card\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, \"BY \" + _toDisplayString(item.username), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(item.year) + \"-\" + _toDisplayString(item.month) + \"-\" + _toDisplayString(item.day), 1 /* TEXT */)])]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"我发布的帖子\",\n      name: \"mine\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.myposts, (item, index) => {\n        return _openBlock(), _createBlock(_component_el_card, {\n          key: item.id,\n          class: \"card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_container, null, {\n            default: _withCtx(() => [_createVNode(_component_el_header, null, {\n              default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString(item.title), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_main, null, {\n              default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(item.content), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_footer, null, {\n              default: _withCtx(() => [_createTextVNode(\"Footer\")]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n            type: \"danger\",\n            class: \"button\",\n            size: \"large\",\n            onClick: $event => $options.deletePost(index)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"撤回帖子\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["class","style","_createBlock","_component_el_tabs","$data","activeTab","$event","_createVNode","_component_el_tab_pane","label","name","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","posts","item","_component_el_card","key","id","_toDisplayString","title","content","_hoisted_2","username","year","month","day","_hoisted_3","myposts","index","_component_el_container","_component_el_header","_component_el_main","_component_el_footer","_hoisted_4","_component_el_button","type","size","onClick","$options","deletePost"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\Post.vue"],"sourcesContent":["<template>\r\n  <el-tabs v-model=\"activeTab\">\r\n    <el-tab-pane label=\"所有帖子\" name=\"all\">\r\n      <div class=\"container\">\r\n        <el-card v-for=\"item in posts\" :key=\"item.id\" class=\"card\">\r\n          <h3>{{ item.title }}</h3>\r\n          <p>{{ item.content }}</p>\r\n          <div style=\"display: flex;flex-direction: column;align-items: flex-end;\">\r\n            <div>BY {{ item.username }}</div>\r\n            {{ item.year }}-{{ item.month }}-{{ item.day }}\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </el-tab-pane>\r\n    <el-tab-pane label=\"我发布的帖子\" name=\"mine\">\r\n      <div class=\"container\">\r\n        <el-card v-for=\"(item, index) in myposts\" :key=\"item.id\" class=\"card\">\r\n          <el-container>\r\n      <el-header>          <h3>{{ item.title }}</h3></el-header>\r\n      <el-main>      <p>{{ item.content }}</p></el-main>\r\n      <el-footer>Footer</el-footer>\r\n    </el-container>\r\n\r\n    \r\n\r\n          <div style=\"display: flex;flex-direction: column;align-items: flex-end;\">\r\n            <el-button type=\"danger\" class=\"button\" size=\"large\" @click=\"deletePost(index)\">撤回帖子</el-button>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </el-tab-pane>\r\n  </el-tabs>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Mock from 'mockjs';\r\nimport { ElMessage } from 'element-plus';\r\nMock.mock('/api/getuserpost', {\r\n  'list|10-20': [{\r\n    'content': '@ctitle(30, 100)',\r\n    'title': '@ctitle(8,14)',\r\n  }]\r\n})\r\nexport default {\r\n  name: \"PostView\",\r\n  data() {\r\n    return {\r\n      activeTab: \"all\",\r\n      posts: [],\r\n      myposts: []\r\n    }\r\n  },\r\n  methods: {\r\n    deletePost(index) {\r\n      this.$http.post(\"/api/deletepost\",{\r\n        post_id:this.myposts[index].id,\r\n      }).then(response=>{\r\n        if(response.data.success){\r\n          ElMessage({message:\"撤回成功\",type:\"success\"})\r\n          this.myposts.splice(index, 1)\r\n        }\r\n        else{\r\n          ElMessage({message:\"撤回失败\",type:\"error\"})\r\n        }\r\n      }).catch(error=>{\r\n        ElMessage({message:error,type:\"error\"})\r\n      })\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$http.post('/api/getuserpost', {\r\n      user_id: this.$store.getters.status.userid,\r\n    }).then(response => {\r\n      this.myposts = response.data.userposts\r\n    }).catch(error => {\r\n      ElMessage({ message: error, type: \"error\" })\r\n    })\r\n    this.$http.post('/api/getallpost')\r\n      .then(response=>{\r\n        this.posts=response.data.posts\r\n      }).\r\n      catch(error=>{\r\n        ElMessage({message:error,type:\"error\"})\r\n      })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.card {\r\n  width: 55vh;\r\n  margin: 10px;\r\n}\r\n\r\nh3 {\r\n  font-size: 18px;\r\n  text-align: center;\r\n}\r\n\r\n\r\n\r\n.floating-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 9999;\r\n}\r\n</style>\r\n\r\n"],"mappings":";;;EAGWA,KAAK,EAAC;AAAW;;EAIbC,KAAmE,EAAnE;IAAA;IAAA;IAAA;EAAA;AAAmE;;EAQvED,KAAK,EAAC;AAAW;;EAUbC,KAAmE,EAAnE;IAAA;IAAA;IAAA;EAAA;AAAmE;;;;;;;;;;uBAxBhFC,YAAA,CA8BUC,kBAAA;gBA9BQC,KAAA,CAAAC,SAAS;+DAATD,KAAA,CAAAC,SAAS,GAAAC,MAAA;;sBACzB,MAWc,CAXdC,YAAA,CAWcC,sBAAA;MAXDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;wBAC7B,MASM,CATNC,mBAAA,CASM,OATNC,UASM,I,kBARJC,mBAAA,CAOUC,SAAA,QAAAC,WAAA,CAPcX,KAAA,CAAAY,KAAK,EAAbC,IAAI;6BAApBf,YAAA,CAOUgB,kBAAA;UAPsBC,GAAG,EAAEF,IAAI,CAACG,EAAE;UAAEpB,KAAK,EAAC;;4BAClD,MAAyB,CAAzBW,mBAAA,CAAyB,YAAAU,gBAAA,CAAlBJ,IAAI,CAACK,KAAK,kBACjBX,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBJ,IAAI,CAACM,OAAO,kBAClBZ,mBAAA,CAGM,OAHNa,UAGM,GAFJb,mBAAA,CAAiC,aAA5B,KAAG,GAAAU,gBAAA,CAAGJ,IAAI,CAACQ,QAAQ,kB,iBAAS,GACjC,GAAAJ,gBAAA,CAAGJ,IAAI,CAACS,IAAI,IAAG,GAAC,GAAAL,gBAAA,CAAGJ,IAAI,CAACU,KAAK,IAAG,GAAC,GAAAN,gBAAA,CAAGJ,IAAI,CAACW,GAAG,iB;;;;;;;QAKpDrB,YAAA,CAgBcC,sBAAA;MAhBDC,KAAK,EAAC,QAAQ;MAACC,IAAI,EAAC;;wBAC/B,MAcM,CAdNC,mBAAA,CAcM,OAdNkB,UAcM,I,kBAbJhB,mBAAA,CAYUC,SAAA,QAAAC,WAAA,CAZuBX,KAAA,CAAA0B,OAAO,GAAvBb,IAAI,EAAEc,KAAK;6BAA5B7B,YAAA,CAYUgB,kBAAA;UAZiCC,GAAG,EAAEF,IAAI,CAACG,EAAE;UAAEpB,KAAK,EAAC;;4BAC7D,MAIS,CAJTO,YAAA,CAISyB,uBAAA;8BAHb,MAA0D,CAA1DzB,YAAA,CAA0D0B,oBAAA;gCAArC,MAAyB,CAAzBtB,mBAAA,CAAyB,YAAAU,gBAAA,CAAlBJ,IAAI,CAACK,KAAK,iB;;;0CACtCf,YAAA,CAAkD2B,kBAAA;gCAAnC,MAAyB,CAAzBvB,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBJ,IAAI,CAACM,OAAO,iB;;;0CACjChB,YAAA,CAA6B4B,oBAAA;gCAAlB,MAAM,C,iBAAN,QAAM,E;;;;;wCAKbxB,mBAAA,CAEM,OAFNyB,UAEM,GADJ7B,YAAA,CAAgG8B,oBAAA;YAArFC,IAAI,EAAC,QAAQ;YAACtC,KAAK,EAAC,QAAQ;YAACuC,IAAI,EAAC,OAAO;YAAEC,OAAK,EAAAlC,MAAA,IAAEmC,QAAA,CAAAC,UAAU,CAACX,KAAK;;8BAAG,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}