{"ast":null,"code":"import { ElMessage } from \"element-plus\";\nexport default {\n  name: \"BoughtView\",\n  data() {\n    return {\n      show: false,\n      showComment: false,\n      msg: \"\",\n      comment: \"\",\n      items: [],\n      loading: true\n    };\n  },\n  methods: {\n    toFixed2(str) {\n      let num = Number(str);\n      return isNaN(num) ? str : num.toFixed(2);\n    },\n    confirmReceive(index) {\n      console.log(index);\n      if (this.comment === \"\") {\n        ElMessage({\n          message: \"评论不能为空\",\n          type: \"error\"\n        });\n        return;\n      }\n      this.$http.post(\"/api/confirm\", {\n        item_id: this.items[index].id,\n        content: this.comment\n      }).then().catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.showComment = false;\n      this.comment = \"\";\n      ElMessage({\n        message: \"确认收货成功\",\n        type: \"success\"\n      });\n      this.items.splice(index, 1);\n    },\n    sendMsg(index) {\n      if (this.msg === \"\") {\n        ElMessage({\n          message: \"消息内容不能为空\",\n          type: \"error\"\n        });\n        return;\n      }\n      this.$http.post(\"/api/sendMsg\", {\n        item_id: this.items[index].id,\n        content: this.msg,\n        from_which: 0\n      }).then().catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.show = false;\n      this.msg = \"\";\n      ElMessage({\n        message: \"发送消息成功\",\n        type: \"success\"\n      });\n    }\n  },\n  mounted() {\n    this.$http.post('/api/getbought', {\n      user_id: this.$store.getters.status.userid\n    }).then(res => {\n      this.items = res.data.items;\n    }).catch(error => {\n      ElMessage({\n        message: error,\n        type: \"error\"\n      });\n    });\n    this.loading = false;\n  }\n};","map":{"version":3,"names":["ElMessage","name","data","show","showComment","msg","comment","items","loading","methods","toFixed2","str","num","Number","isNaN","toFixed","confirmReceive","index","console","log","message","type","$http","post","item_id","id","content","then","catch","error","splice","sendMsg","from_which","mounted","user_id","$store","getters","status","userid","res"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\Bought.vue"],"sourcesContent":["<template>\r\n  <el-container direction=\"vertical\" v-loading=\"loading\">\r\n    <div v-if=\"items.length === 0 && this.loading === false\"\r\n      style=\"display: flex;justify-content: center;align-items: center;\">\r\n      <h3 style=\" color: rgb(126, 126, 126);font-size: 22px;\">还没有已购买的书籍哦</h3>\r\n    </div>\r\n    <transition-group name=\"list\" tag=\"div\">\r\n      <div v-for=\"(item, index) in items\" :key=\"item.id\" class=\"list-item\">\r\n        <el-card class=\"card\">\r\n          <el-row style=\"  display: flex;align-items: center;height: 160px;\">\r\n            <el-col :span=\"4\" class=\"centered-col\" style=\"height: 160px;\">\r\n              <el-image :src=\"item.image\" class=\"image\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"4\" class=\"centered-col\">\r\n              <h3>{{ index }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"1\" class=\"centered-col\">\r\n            </el-col>\r\n            <el-col :span=\"7\" class=\"centered-col\">\r\n              {{ item.intro }}\r\n            </el-col>\r\n            <el-col :span=\"2\" class=\"centered-col\">\r\n              <h3>¥{{ toFixed2(item.price) }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>{{ item.sellerName }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>联系方式:<br>{{ item.phoneNum }}</h3>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 20px;\">\r\n          <el-popconfirm confirm-button-text=\"确认\" cancel-button-text=\"取消\" title=\"确认收货？\" @confirm=\"showComment = true\">\r\n            <template #reference>\r\n              <el-button type=\"primary\" class=\"button\" size=\"large\">确认收货</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n          <el-button type=\"success\" class=\"button\" size=\"large\" @click=\"show = true\">发送消息</el-button>\r\n        </div>\r\n        <el-divider></el-divider>\r\n      </div>\r\n    </transition-group>\r\n    <el-dialog v-model=\"showComment\" title=\"请添加对卖家的评论\" width=\"30%\">\r\n      <el-input v-model=\"comment\" placeholder=\"请输入评论内容\" />\r\n      <div style=\"display:flex;justify-content: end;padding-top: 10px;\" :modal=\"false\">\r\n        <el-button type=\"primary\" class=“button” size=“large” @click=\"confirmReceive(index)\">确认</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog v-model=\"show\" title=\"向卖家发送消息\" width=\"30%\">\r\n      <el-input v-model=\"msg\" placeholder=\"请输入消息内容\" />\r\n      <div style=\"display:flex;justify-content: end;padding-top: 10px;\">\r\n        <el-button type=\"primary\" class=\"button\" size=“large” @click=\"sendMsg(index)\">确认</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </el-container>\r\n</template>\r\n  \r\n<script>\r\nimport { ElMessage } from \"element-plus\"\r\nexport default {\r\n  name: \"BoughtView\",\r\n\r\n  data() {\r\n    return {\r\n      show: false,\r\n      showComment: false,\r\n      msg: \"\",\r\n      comment: \"\",\r\n      items: [],\r\n      loading: true,\r\n    }\r\n  },\r\n  methods: {\r\n    toFixed2(str) {\r\n      let num = Number(str);\r\n      return isNaN(num) ? str : num.toFixed(2);\r\n    },\r\n    confirmReceive(index) {\r\n      console.log(index)\r\n      if (this.comment === \"\") {\r\n        ElMessage({ message: \"评论不能为空\", type: \"error\" })\r\n        return;\r\n      }\r\n      this.$http.post(\"/api/confirm\", {\r\n        item_id: this.items[index].id,\r\n        content: this.comment\r\n      }).then().catch(error => {\r\n        ElMessage({ message: error, type: \"error\" })\r\n      })\r\n      this.showComment = false;\r\n      this.comment = \"\";\r\n      ElMessage({ message: \"确认收货成功\", type: \"success\" })\r\n      this.items.splice(index, 1);\r\n    },\r\n    sendMsg(index) {\r\n      if (this.msg === \"\") {\r\n        ElMessage({ message: \"消息内容不能为空\", type: \"error\" })\r\n        return;\r\n      }\r\n      this.$http.post(\"/api/sendMsg\", {\r\n        item_id: this.items[index].id,\r\n        content: this.msg,\r\n        from_which: 0\r\n      }).then().catch(error => {\r\n        ElMessage({ message: error, type: \"error\" })\r\n      })\r\n      this.show = false;\r\n      this.msg = \"\";\r\n      ElMessage({ message: \"发送消息成功\", type: \"success\" })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$http.post('/api/getbought', {\r\n      user_id: this.$store.getters.status.userid,\r\n    }).then(res => {\r\n      this.items = res.data.items\r\n    }).catch(error => {\r\n      ElMessage({ message: error, type: \"error\" })\r\n    })\r\n    this.loading = false\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.text.item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.centered-col {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  height: 200px;\r\n  border-radius: 30px;\r\n}\r\n\r\n.image {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: auto;\r\n}\r\n\r\n.list-item {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-leave-active {\r\n  position: absolute;\r\n}\r\n\r\n.list-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.button {\r\n  margin-left: 50px;\r\n  margin-right: 20px;\r\n}\r\n</style> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}