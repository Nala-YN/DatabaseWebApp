{"ast":null,"code":"import { ElMessage } from \"element-plus\";\nexport default {\n  name: \"SoldHistoryView\",\n  data() {\n    return {\n      show: false,\n      msg: \"\",\n      items: [],\n      loading: true\n    };\n  },\n  methods: {\n    toFixed2(str) {\n      let num = Number(str);\n      return isNaN(num) ? str : num.toFixed(2);\n    },\n    sendMsg(index) {\n      if (this.msg === \"\") {\n        ElMessage({\n          message: \"消息内容不能为空\",\n          type: \"error\"\n        });\n        return;\n      }\n      this.$http.post(\"/api/sendMsg\", {\n        item_id: this.items[index].id,\n        content: this.msg,\n        from_which: 1\n      }).then().catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.show = false;\n      this.msg = \"\";\n      ElMessage({\n        message: \"发送消息成功\",\n        type: \"success\"\n      });\n    }\n  },\n  mounted() {\n    this.$http.post('/api/getsold', {\n      user_id: this.$store.getters.status.userid\n    }).then(res => {\n      this.items = res.data.items;\n    }).catch(error => {\n      ElMessage({\n        message: error,\n        type: \"error\"\n      });\n    });\n    this.loading = false;\n  }\n};","map":{"version":3,"names":["ElMessage","name","data","show","msg","items","loading","methods","toFixed2","str","num","Number","isNaN","toFixed","sendMsg","index","message","type","$http","post","item_id","id","content","from_which","then","catch","error","mounted","user_id","$store","getters","status","userid","res"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\SoldHistory.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"items.length === 0&&this.loading===false\" style=\"display: flex;justify-content: center;align-items: center;\">\r\n    <h3 style=\" color: rgb(126, 126, 126);font-size: 22px;\">还没有未完成的书籍订单哦</h3>\r\n  </div>\r\n  <el-container direction=\"vertical\" v-loading=\"this.loading\">\r\n    <transition-group name=\"list\" tag=\"div\">\r\n      <div v-for=\"(item, index) in items\" :key=\"item.id\" class=\"list-item\">\r\n        <el-card class=\"card\">\r\n          <el-row style=\"  display: flex;align-items: center;height: 160px;\">\r\n            <el-col :span=\"4\" class=\"centered-col\">\r\n              <el-image :src=\"item.image\" class=\"image\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>{{ item.name }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"8\" class=\"centered-col\">\r\n              {{ item.intro }}\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>¥{{ toFixed2(item.price) }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>{{ item.buyerName }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>联系方式:<br>{{ item.phoneNum }}</h3>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 20px;\">\r\n          <el-button type=\"success\" class=\"button\" size=\"large\" @click=\"show=true\">发送消息</el-button>\r\n          <el-dialog v-model=\"show\" title=\"向买家发送消息\" width=\"30%\">\r\n            <el-input v-model=\"msg\" placeholder=\"请输入消息内容\" />\r\n            <div style=\"display:flex;justify-content: end;padding-top: 10px;\">\r\n              <el-button type=\"primary\" class=\"button\" size=“large” @click=\"sendMsg(index)\">确认</el-button>\r\n            </div>\r\n          </el-dialog>\r\n        </div>\r\n        <el-divider></el-divider>\r\n      </div>\r\n    </transition-group>\r\n  </el-container>\r\n</template>\r\n  \r\n<script>\r\nimport { ElMessage } from \"element-plus\"\r\nexport default {\r\n  name: \"SoldHistoryView\",\r\n\r\n  data() {\r\n    return {\r\n      show: false,\r\n      msg: \"\",\r\n      items: [],\r\n      loading:true,\r\n    }\r\n  },\r\n  methods: {\r\n    toFixed2(str) {\r\n            let num = Number(str);\r\n            return isNaN(num) ? str : num.toFixed(2);\r\n        },\r\n    sendMsg(index) {\r\n      if(this.msg===\"\"){\r\n        ElMessage({ message: \"消息内容不能为空\", type: \"error\" })\r\n        return;\r\n      }\r\n      this.$http.post(\"/api/sendMsg\", {\r\n        item_id: this.items[index].id,\r\n        content:this.msg,\r\n        from_which:1\r\n      }).then().catch(error => {\r\n        ElMessage({ message: error, type: \"error\" })\r\n      })\r\n      this.show=false;\r\n      this.msg=\"\";\r\n      ElMessage({ message: \"发送消息成功\", type: \"success\" })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$http.post('/api/getsold', {\r\n      user_id: this.$store.getters.status.userid,\r\n    }).then(res => {\r\n      this.items = res.data.items\r\n    }).catch(error => {\r\n      ElMessage({ message: error, type: \"error\" })\r\n    })\r\n    this.loading=false\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.text.item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.centered-col {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  height: 200px;\r\n  border-radius: 30px;\r\n}\r\n\r\n.image {\r\n  margin-left: 20px;\r\n  /* 距离左边的距离 */\r\n  margin-right: 50px;\r\n}\r\n\r\n.list-item {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-leave-active {\r\n  position: absolute;\r\n}\r\n\r\n.list-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.button {\r\n  margin-left: 50px;\r\n  margin-right: 20px;\r\n}\r\n</style> "],"mappings":"AA6CA,SAASA,SAAQ,QAAS,cAAa;AACvC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EAEvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAC;IACV;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,GAAG,EAAE;MACN,IAAIC,GAAE,GAAIC,MAAM,CAACF,GAAG,CAAC;MACrB,OAAOG,KAAK,CAACF,GAAG,IAAID,GAAE,GAAIC,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;IACLC,OAAOA,CAACC,KAAK,EAAE;MACb,IAAG,IAAI,CAACX,GAAG,KAAG,EAAE,EAAC;QACfJ,SAAS,CAAC;UAAEgB,OAAO,EAAE,UAAU;UAAEC,IAAI,EAAE;QAAQ,CAAC;QAChD;MACF;MACA,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;QAC9BC,OAAO,EAAE,IAAI,CAACf,KAAK,CAACU,KAAK,CAAC,CAACM,EAAE;QAC7BC,OAAO,EAAC,IAAI,CAAClB,GAAG;QAChBmB,UAAU,EAAC;MACb,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QACvB1B,SAAS,CAAC;UAAEgB,OAAO,EAAEU,KAAK;UAAET,IAAI,EAAE;QAAQ,CAAC;MAC7C,CAAC;MACD,IAAI,CAACd,IAAI,GAAC,KAAK;MACf,IAAI,CAACC,GAAG,GAAC,EAAE;MACXJ,SAAS,CAAC;QAAEgB,OAAO,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAU,CAAC;IAClD;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;MAC9BS,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC;IACtC,CAAC,CAAC,CAACR,IAAI,CAACS,GAAE,IAAK;MACb,IAAI,CAAC5B,KAAI,GAAI4B,GAAG,CAAC/B,IAAI,CAACG,KAAI;IAC5B,CAAC,CAAC,CAACoB,KAAK,CAACC,KAAI,IAAK;MAChB1B,SAAS,CAAC;QAAEgB,OAAO,EAAEU,KAAK;QAAET,IAAI,EAAE;MAAQ,CAAC;IAC7C,CAAC;IACD,IAAI,CAACX,OAAO,GAAC,KAAI;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}