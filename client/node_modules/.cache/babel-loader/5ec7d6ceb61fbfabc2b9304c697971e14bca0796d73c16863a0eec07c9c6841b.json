{"ast":null,"code":"import axios from 'axios';\nimport Mock from 'mockjs';\nimport { ElMessage } from \"element-plus\";\nMock.mock('/api/data', {\n  'list|10-20': [{\n    'id|+1': 1,\n    'name': '@ctitle(10, 20)',\n    'image': '@image(\\'200x100\\', \\'#50B347\\', \\'Hello\\')',\n    'datetime': '@datetime()',\n    'sellerName': '@cname()',\n    'phoneNum': '@integer(11111111111,11111111112)',\n    'prize': '@integer(10,20)',\n    'intro': '@ctitle(4, 20)'\n  }]\n});\nexport default {\n  name: \"cartView\",\n  data() {\n    return {\n      show: false,\n      input: \"\",\n      items: [{\n        id: 1,\n        name: \"1111\"\n      }]\n    };\n  },\n  methods: {\n    confirmReceive(index) {\n      this.$http.post(\"/api/confirm\", {\n        item_id: this.items[index].id\n      }).then().catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      ElMessage({\n        message: \"确认收货成功\",\n        type: \"success\"\n      });\n      this.items.splice(index, 1);\n    },\n    sendMsg(index) {}\n  },\n  mounted() {\n    this.$http.post('/api/getbought', {\n      user_id: this.$store.getters.status.userid\n    }).then(res => {\n      this.items = res.data.items;\n    }).catch(error => {\n      ElMessage({\n        message: error,\n        type: \"error\"\n      });\n    });\n  }\n};","map":{"version":3,"names":["axios","Mock","ElMessage","mock","name","data","show","input","items","id","methods","confirmReceive","index","$http","post","item_id","then","catch","error","message","type","splice","sendMsg","mounted","user_id","$store","getters","status","userid","res"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\Bought.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"items.length === 0\" style=\"display: flex;justify-content: center;align-items: center;\">\r\n    <h3 style=\" color: rgb(126, 126, 126);font-size: 22px;\">还没有已购买的书籍哦</h3>\r\n  </div>\r\n  <el-container direction=\"vertical\">\r\n    <transition-group name=\"list\" tag=\"div\">\r\n      <div v-for=\"(item, index) in items\" :key=\"item.id\" class=\"list-item\">\r\n        <el-card class=\"card\">\r\n          <el-row style=\"  display: flex;align-items: center;height: 160px;\">\r\n            <el-col :span=\"4\" class=\"centered-col\">\r\n              <el-image :src=\"item.image\" class=\"image\"></el-image>\r\n            </el-col>\r\n            <el-col :span=\"4\" class=\"centered-col\">\r\n              <h3>{{ item.name }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"5\" class=\"centered-col\">\r\n              <h3>{{ item.intro }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>¥{{ item.prize }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"3\" class=\"centered-col\">\r\n              <h3>¥{{ item.sellerName }}</h3>\r\n            </el-col>\r\n            <el-col :span=\"4\" class=\"centered-col\">\r\n              <h3>联系方式:<br>{{ item.number }}</h3>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 20px;\">\r\n          <el-popconfirm confirm-button-text=\"确认\" cancel-button-text=\"取消\" title=\"确认收货？\" @confirm=\"confirmReceive(index)\">\r\n            <template #reference>\r\n              <el-button type=\"primary\" class=\"button\" size=\"large\">确认收货</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n          <el-button type=\"info\" class=\"button\" size=\"large\" @click=\"sendMsg()\">发送消息</el-button>\r\n        </div>\r\n        <el-divider></el-divider>\r\n      </div>\r\n    </transition-group>\r\n  </el-container>\r\n  <el-dialog v-model=\"show\" title=\"消息发送\" width=\"30%\">\r\n        <el-input v-model=\"input\" placeholder=\"请输入新的邮箱\" />\r\n        <div style=\"display:flex;justify-content: end;padding-top: 10px;\">\r\n            <el-button type=\"primary\" class=“button” size=“large” @click=\"modify('email')\">确认修改</el-button>\r\n        </div>\r\n    </el-dialog>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport Mock from 'mockjs';\r\nimport { ElMessage } from \"element-plus\"\r\nMock.mock('/api/data', {\r\n  'list|10-20': [{\r\n    'id|+1': 1,\r\n    'name': '@ctitle(10, 20)',\r\n    'image': '@image(\\'200x100\\', \\'#50B347\\', \\'Hello\\')',\r\n    'datetime': '@datetime()',\r\n    'sellerName': '@cname()',\r\n    'phoneNum': '@integer(11111111111,11111111112)',\r\n    'prize': '@integer(10,20)',\r\n    'intro': '@ctitle(4, 20)',\r\n  }]\r\n})\r\nexport default {\r\n  name: \"cartView\",\r\n\r\n  data() {\r\n    return {\r\n      show:false,\r\n      input:\"\",\r\n      items: [{id:1,name:\"1111\",}],\r\n    }\r\n  },\r\n  methods: {\r\n    confirmReceive(index) {\r\n      this.$http.post(\"/api/confirm\", {\r\n        item_id: this.items[index].id,\r\n      }).then().catch(error => {\r\n        ElMessage({ message: error, type: \"error\" })\r\n      })\r\n      ElMessage({ message: \"确认收货成功\", type: \"success\" })\r\n      this.items.splice(index, 1);\r\n    },\r\n    sendMsg(index) {\r\n      \r\n    }\r\n  },\r\n  mounted() {\r\n    this.$http.post('/api/getbought', {\r\n      user_id: this.$store.getters.status.userid,\r\n    }).then(res => {\r\n      this.items = res.data.items\r\n    }).catch(error => {\r\n      ElMessage({ message: error, type: \"error\" })\r\n    })\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.text.item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.centered-col {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  height: 200px;\r\n  border-radius: 30px;\r\n}\r\n\r\n.image {\r\n  margin-left: 20px;\r\n  /* 距离左边的距离 */\r\n  margin-right: 50px;\r\n}\r\n\r\n.list-item {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-leave-active {\r\n  position: absolute;\r\n}\r\n\r\n.list-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.button {\r\n  margin-left: 50px;\r\n  margin-right: 20px;\r\n}\r\n</style> "],"mappings":"AAkDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,QAAQ;AACzB,SAASC,SAAQ,QAAS,cAAa;AACvCD,IAAI,CAACE,IAAI,CAAC,WAAW,EAAE;EACrB,YAAY,EAAE,CAAC;IACb,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,iBAAiB;IACzB,OAAO,EAAE,6CAA6C;IACtD,UAAU,EAAE,aAAa;IACzB,YAAY,EAAE,UAAU;IACxB,UAAU,EAAE,mCAAmC;IAC/C,OAAO,EAAE,iBAAiB;IAC1B,OAAO,EAAE;EACX,CAAC;AACH,CAAC;AACD,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAC,EAAE;MACRC,KAAK,EAAE,CAAC;QAACC,EAAE,EAAC,CAAC;QAACL,IAAI,EAAC;MAAO,CAAC;IAC7B;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;QAC9BC,OAAO,EAAE,IAAI,CAACP,KAAK,CAACI,KAAK,CAAC,CAACH;MAC7B,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QACvBhB,SAAS,CAAC;UAAEiB,OAAO,EAAED,KAAK;UAAEE,IAAI,EAAE;QAAQ,CAAC;MAC7C,CAAC;MACDlB,SAAS,CAAC;QAAEiB,OAAO,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAU,CAAC;MAChD,IAAI,CAACZ,KAAK,CAACa,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACDU,OAAOA,CAACV,KAAK,EAAE,CAEf;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,KAAK,CAACC,IAAI,CAAC,gBAAgB,EAAE;MAChCU,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC;IACtC,CAAC,CAAC,CAACZ,IAAI,CAACa,GAAE,IAAK;MACb,IAAI,CAACrB,KAAI,GAAIqB,GAAG,CAACxB,IAAI,CAACG,KAAI;IAC5B,CAAC,CAAC,CAACS,KAAK,CAACC,KAAI,IAAK;MAChBhB,SAAS,CAAC;QAAEiB,OAAO,EAAED,KAAK;QAAEE,IAAI,EAAE;MAAQ,CAAC;IAC7C,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}