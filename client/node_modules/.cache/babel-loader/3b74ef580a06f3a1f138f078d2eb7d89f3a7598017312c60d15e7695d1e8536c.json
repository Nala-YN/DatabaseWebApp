{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  data() {\n    return {\n      name: \"\",\n      intro: \"\",\n      price: 0,\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      base64: \"\",\n      fileList: []\n    };\n  },\n  methods: {\n    submitForm() {\n      // 这里是你的发布逻辑，可以发送请求到后端或者其他操作\n      //console.log(this.fileList)\n      axios.post('http://127.0.0.1:8000/api/uploadsell', {\n        book_name: this.name,\n        book_intro: this.intro,\n        book_price: this.price,\n        book_image: this.base64\n      }).then(response => {}).catch(error => {\n        ElMessage({\n          message: error,\n          type: \"error\"\n        });\n      });\n      this.resetForm();\n    },\n    resetForm() {\n      this.name = \"\";\n      this.intro = \"\";\n      this.price = \"\";\n      this.fileList = [];\n    },\n    uploadFile(file) {\n      console.log(file);\n      // 这里是你的上传前的验证逻辑，可以检查文件类型和大小等\n      const reader = new FileReader();\n      reader.readAsDataURL(file.file);\n      reader.onload = () => {\n        this.base64 = reader.result;\n      };\n    },\n    handleUpload(file) {\n      const isLt10M = file.size / 1024 / 1024 < 10; // 判断文件是否小于2MB\n      if (!isLt10M) {\n        // 如果文件大于2MB\n        ElMessage({\n          message: '上传图片大小不能超过 10MB',\n          type: \"error\"\n        }); // 弹出错误信息\n        return false; // 停止上传\n      }\n\n      const isImage = file.type.startsWith(\"image/\"); // 判断文件是否是图片类型\n      if (!isImage) {\n        // 如果文件不是图片类型\n        ElMessage({\n          message: '只能上传图片格式',\n          type: \"error\"\n        }); // 弹出错误信息\n        return false; // 停止上传\n      }\n\n      return true;\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList);\n    },\n    handleExceed() {\n      ElMessage({\n        message: \"只允许上传一张图片\",\n        type: \"error\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessage","data","name","intro","price","dialogImageUrl","dialogVisible","base64","fileList","methods","submitForm","post","book_name","book_intro","book_price","book_image","then","response","catch","error","message","type","resetForm","uploadFile","file","console","log","reader","FileReader","readAsDataURL","onload","result","handleUpload","isLt10M","size","isImage","startsWith","handleRemove","handleExceed"],"sources":["C:\\Users\\faq\\Desktop\\DatabaseWebApp\\client\\src\\components\\AddSelling.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>发布您的出售信息</h1>\r\n    <el-form class=\"form\" ref=\"form\" :model=\"form\" label-width=\"100px\">\r\n      <el-form-item label=\"书籍名称\">\r\n        <el-input v-model=\"name\" placeholder=\"请输入书籍名称\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍介绍\">\r\n        <el-input type=\"textarea\" v-model=\"intro\" placeholder=\"请输入书籍介绍：如作者、出版社、新旧程度等\"\r\n          :autosize=\"{ minRows: 5, maxRows: 10 }\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍价格\">\r\n        <el-input-number v-model=\"price\" :min=\"0\" :step=\"1\" controls-position=\"right\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item label=\"书籍封面图片\">\r\n        <el-upload list-type=\"picture-card\" :on-remove=\"handleRemove\" :on-exceed=\"handleExceed\" :file-list=\"fileList\"\r\n          :http-request=\"uploadFile\" :before-upload=\"handleUpload\" :limit=\"1\">\r\n          <i class=\"el-icon-plus\"></i>\r\n        </el-upload>\r\n        <!-- <el-image style=\"width: 100px; height: 100px\" :src=\"url\" /> -->\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('form')\">发布</el-button>\r\n        <el-button @click=\"resetForm('form')\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      intro: \"\",\r\n      price: 0,\r\n      dialogImageUrl: \"\",\r\n      dialogVisible: false,\r\n      base64: \"\",\r\n      fileList: [],\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      // 这里是你的发布逻辑，可以发送请求到后端或者其他操作\r\n      //console.log(this.fileList)\r\n      axios.post('http://127.0.0.1:8000/api/uploadsell',\r\n        {\r\n          book_name:this.name,\r\n          book_intro:this.intro,\r\n          book_price:this.price,\r\n          book_image: this.base64\r\n        }).then(response => {\r\n          \r\n        }).catch(error => {\r\n          ElMessage({ message: error, type: \"error\" })\r\n        })\r\n      this.resetForm();\r\n    },\r\n    resetForm() {\r\n      this.name = \"\";\r\n      this.intro = \"\";\r\n      this.price = \"\";\r\n      this.fileList = [];\r\n    },\r\n    uploadFile(file) {\r\n      console.log(file);\r\n      // 这里是你的上传前的验证逻辑，可以检查文件类型和大小等\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file.file);\r\n      reader.onload = () => {\r\n        this.base64 = reader.result;\r\n      }\r\n    },\r\n    handleUpload(file) {\r\n      const isLt10M = file.size / 1024 / 1024 < 10; // 判断文件是否小于2MB\r\n      if (!isLt10M) {\r\n        // 如果文件大于2MB\r\n        ElMessage({ message: '上传图片大小不能超过 10MB', type: \"error\" }); // 弹出错误信息\r\n        return false; // 停止上传\r\n      }\r\n      const isImage = file.type.startsWith(\"image/\"); // 判断文件是否是图片类型\r\n      if (!isImage) {\r\n        // 如果文件不是图片类型\r\n        ElMessage({ message: '只能上传图片格式', type: \"error\" });// 弹出错误信息\r\n        return false; // 停止上传\r\n      }\r\n      return true;\r\n    },\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList);\r\n    },\r\n    handleExceed() {\r\n      ElMessage({ message: \"只允许上传一张图片\", type: \"error\" })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 80vh;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n}\r\n\r\n.form {\r\n  width: 75%;\r\n}\r\n</style>\r\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,cAAc;AACxC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA;MACAX,KAAK,CAACY,IAAI,CAAC,sCAAsC,EAC/C;QACEC,SAAS,EAAC,IAAI,CAACV,IAAI;QACnBW,UAAU,EAAC,IAAI,CAACV,KAAK;QACrBW,UAAU,EAAC,IAAI,CAACV,KAAK;QACrBW,UAAU,EAAE,IAAI,CAACR;MACnB,CAAC,CAAC,CAACS,IAAI,CAACC,QAAO,IAAK,CAEpB,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QAChBnB,SAAS,CAAC;UAAEoB,OAAO,EAAED,KAAK;UAAEE,IAAI,EAAE;QAAQ,CAAC;MAC7C,CAAC;MACH,IAAI,CAACC,SAAS,CAAC,CAAC;IAClB,CAAC;IACDA,SAASA,CAAA,EAAG;MACV,IAAI,CAACpB,IAAG,GAAI,EAAE;MACd,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACI,QAAO,GAAI,EAAE;IACpB,CAAC;IACDe,UAAUA,CAACC,IAAI,EAAE;MACfC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;MACA,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACL,IAAI,CAACA,IAAI,CAAC;MAC/BG,MAAM,CAACG,MAAK,GAAI,MAAM;QACpB,IAAI,CAACvB,MAAK,GAAIoB,MAAM,CAACI,MAAM;MAC7B;IACF,CAAC;IACDC,YAAYA,CAACR,IAAI,EAAE;MACjB,MAAMS,OAAM,GAAIT,IAAI,CAACU,IAAG,GAAI,IAAG,GAAI,IAAG,GAAI,EAAE,EAAE;MAC9C,IAAI,CAACD,OAAO,EAAE;QACZ;QACAjC,SAAS,CAAC;UAAEoB,OAAO,EAAE,iBAAiB;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC,EAAE;QAC1D,OAAO,KAAK,EAAE;MAChB;;MACA,MAAMc,OAAM,GAAIX,IAAI,CAACH,IAAI,CAACe,UAAU,CAAC,QAAQ,CAAC,EAAE;MAChD,IAAI,CAACD,OAAO,EAAE;QACZ;QACAnC,SAAS,CAAC;UAAEoB,OAAO,EAAE,UAAU;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC,CAAC;QAClD,OAAO,KAAK,EAAE;MAChB;;MACA,OAAO,IAAI;IACb,CAAC;IACDgB,YAAYA,CAACb,IAAI,EAAEhB,QAAQ,EAAE;MAC3BiB,OAAO,CAACC,GAAG,CAACF,IAAI,EAAEhB,QAAQ,CAAC;IAC7B,CAAC;IACD8B,YAAYA,CAAA,EAAG;MACbtC,SAAS,CAAC;QAAEoB,OAAO,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAQ,CAAC;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}